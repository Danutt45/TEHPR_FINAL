[{"D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\index.js":"1","D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\App.js":"2","D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\reportWebVitals.js":"3","D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\redux\\reducer.js":"4","D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\components\\project.js":"5","D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\components\\nav.js":"6","D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\components\\addProject.js":"7","D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\components\\home.js":"8","D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\components\\login.js":"9","D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\components\\formBug2.js":"10","D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\components\\formBug.js":"11","D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\components\\bug.js":"12","D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\components\\register.js":"13","D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\components\\editProject.js":"14","D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\components\\footer.js":"15","D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\components\\profile.js":"16","D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\redux\\actionTypes.js":"17","D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\redux\\initialState.js":"18","D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\redux\\actionCreators.js":"19"},{"size":732,"mtime":1642725657150,"results":"20","hashOfConfig":"21"},{"size":2429,"mtime":1642725657136,"results":"22","hashOfConfig":"21"},{"size":375,"mtime":1642725657151,"results":"23","hashOfConfig":"21"},{"size":425,"mtime":1642725657151,"results":"24","hashOfConfig":"21"},{"size":9618,"mtime":1642725657139,"results":"25","hashOfConfig":"21"},{"size":6074,"mtime":1642731989300,"results":"26","hashOfConfig":"21"},{"size":6442,"mtime":1642725657137,"results":"27","hashOfConfig":"21"},{"size":13105,"mtime":1642729683675,"results":"28","hashOfConfig":"21"},{"size":5393,"mtime":1642728295713,"results":"29","hashOfConfig":"21"},{"size":5226,"mtime":1642725657138,"results":"30","hashOfConfig":"21"},{"size":4868,"mtime":1642725657138,"results":"31","hashOfConfig":"21"},{"size":4937,"mtime":1642725657137,"results":"32","hashOfConfig":"21"},{"size":4551,"mtime":1642728358174,"results":"33","hashOfConfig":"21"},{"size":6518,"mtime":1642725657137,"results":"34","hashOfConfig":"21"},{"size":365,"mtime":1642725657137,"results":"35","hashOfConfig":"21"},{"size":4052,"mtime":1642729998220,"results":"36","hashOfConfig":"21"},{"size":43,"mtime":1642725657151,"results":"37","hashOfConfig":"21"},{"size":67,"mtime":1642725657151,"results":"38","hashOfConfig":"21"},{"size":166,"mtime":1642725657150,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1gvajbc",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\index.js",[],["86","87"],"D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\App.js",[],"D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\reportWebVitals.js",[],"D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\redux\\reducer.js",[],"D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\components\\project.js",["88","89","90"],"import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport logo from \"../icons/addProj.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport DeleteIcon from \"@material-ui/icons/DeleteForever\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nclass Project extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: [],\r\n      loading: false,\r\n      loaded: false,\r\n    };\r\n    this.DeleteBug = this.DeleteBug.bind(this);\r\n    this.refreshPage = this.refreshPage.bind(this);\r\n  }\r\n\r\n  async fetchProjects() {\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      loading: true,\r\n    }));\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:8001/api/projectWithBugs/${this.props.location.state.id_p}`\r\n      );\r\n      const data = await response.json();\r\n      const bugs = new Array();\r\n      const currentProject = data[0];\r\n      for (let i = 0; i < data[0].Bugs.length; i++) {\r\n        bugs[i] = data[0].Bugs[i];\r\n      }\r\n\r\n      this.setState((prevState) => ({\r\n        ...prevState,\r\n        loading: false,\r\n        loaded: true,\r\n        data: data,\r\n        bugs: bugs,\r\n        currentProject: currentProject,\r\n      }));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  async DeleteBug(id_bug) {\r\n    try {\r\n      const response = await fetch(`http://localhost:8001/api/bugs/${id_bug}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      const data = await response.json();\r\n      console.log(\"test\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  refreshPage() {\r\n    window.location.reload(false);\r\n  }\r\n\r\n  componentDidMount() {\r\n    /*const savadImages = JSON.parse(localStorage.getItem(\"Images\"))\r\n        if (Object.keys(savadImages).length !== 0) {\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                loading: false,\r\n                loaded:true,\r\n                data: savadImages\r\n\r\n            }))\r\n        }\r\n        else {\r\n            this.fetchImages();\r\n            console.log(\"mounted\")\r\n\r\n        }*/\r\n\r\n    this.fetchProjects();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log(`updated... is data loading? ${this.state.loading}`);\r\n    console.log(`updated... is data loaded? ${this.state.loaded}`);\r\n\r\n    // if (prevState.loaded !== this.state.loaded && this.state.loaded) {\r\n    //     localStorage.setItem(\"Images\", JSON.stringify(this.state.data.images))\r\n    // }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    //localStorage.setItem(\"Projects\", JSON.stringify(this.state.data))\r\n    console.log(\"unmounted\");\r\n  }\r\n\r\n  render() {\r\n    const props = this.props;\r\n\r\n    return (\r\n      <div style={{ backgroundColor: \"#FFF6EB\", height: \"70vh\" }}>\r\n        {this.state.loaded && (\r\n          <div\r\n            className=\"container\"\r\n            style={{\r\n              marginTop: \"5%\",\r\n            }}\r\n          >\r\n            <div\r\n              className=\"inLine\"\r\n              style={{\r\n                display: \"inline-block\",\r\n                width: \"50%\",\r\n              }}\r\n            >\r\n              <img\r\n                src={logo}\r\n                alt=\"logo\"\r\n                style={{ display: \"inline-block\" }}\r\n              ></img>\r\n            </div>\r\n            <div\r\n              className=\"inLine\"\r\n              style={{\r\n                display: \"inline-block\",\r\n                width: \"50%\",\r\n              }}\r\n            >\r\n              <TableContainer\r\n                component={Paper}\r\n                style={{ display: \"inline-block\" }}\r\n              >\r\n                <Table aria-label=\"simple table\">\r\n                  <TableHead style={{ backgroundColor: \"#FFE4C4\" }}>\r\n                    <TableRow>\r\n                      <TableCell>Id Proiect: </TableCell>\r\n                      <TableCell>\r\n                        #{this.state.currentProject.id_proiect}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell>Denumire:</TableCell>\r\n                      <TableCell>\r\n                        {this.state.currentProject.denumire}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell>Descriere:</TableCell>\r\n                      <TableCell>\r\n                        {this.state.currentProject.descriere}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell>Link GitHub:</TableCell>\r\n                      <TableCell>\r\n                        {this.state.currentProject.link_git}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell>ID Categorie:</TableCell>\r\n                      <TableCell>\r\n                        {this.state.currentProject.id_categorie}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell>Nr. bug-uri:</TableCell>\r\n                      <TableCell>{this.state.bugs.length}</TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </div>\r\n          </div>\r\n        )}\r\n                  <Typography\r\n            id=\"welcomeMsg\"\r\n            style={{ fontFamily: \"\", paddingBottom: \"2.5%\", paddingTop: \"1.5%\" }}\r\n            variant=\"h5\"\r\n            color=\"textPrimary\"\r\n          >\r\n            Lista bug-urilor\r\n          </Typography>\r\n        <div className=\"container\">\r\n          <div className=\"center\">\r\n            <TableContainer component={Paper}>\r\n              <Table aria-label=\"simple table\">\r\n                <TableHead\r\n                  style={{ backgroundColor: \"#FFE4C4\", height: \"100%\" }}\r\n                >\r\n                  <TableRow>\r\n                    <TableCell align=\"right\">Id</TableCell>\r\n                    <TableCell>Descriere:</TableCell>\r\n                    <TableCell align=\"right\">Prioritate</TableCell>\r\n                    <TableCell align=\"right\">Severitate</TableCell>\r\n                    <TableCell align=\"right\">Id Categorie</TableCell>\r\n                    <TableCell align=\"right\">Id User</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {\" \"}\r\n                      <Link to={{ pathname: `/formBug/` }}>\r\n                        <CloudUploadIcon />\r\n                      </Link>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody id=\"tableBody1\">\r\n                  {this.state.loaded &&\r\n                    this.state.bugs.map((row) => (\r\n                      <TableRow key={row.id_bug}>\r\n                        <TableCell align=\"right\">{row.id_bug}</TableCell>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          <Link\r\n                            style={{ textDecoration: \"none\", color: \"#931621\" }}\r\n                            to={{\r\n                              pathname: `/Bug/${row.id_bug}`,\r\n                              state: {\r\n                                id_b: `${row.id_bug}`,\r\n                              },\r\n                            }}\r\n                          >\r\n                            {row.descriere}\r\n                          </Link>\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{row.prioritate}</TableCell>\r\n                        <TableCell align=\"right\">{row.severitate}</TableCell>\r\n                        <TableCell align=\"right\">{row.id_categorie}</TableCell>\r\n                        <TableCell align=\"right\">{row.id_user}</TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <Link\r\n                            to={{\r\n                              pathname: `/formBug/${row.id_bug}`,\r\n                              state: {\r\n                                id_b: `${row.id_bug}`,\r\n                                id_u: `${row.id_user}`,\r\n                                id_c: `${row.id_categorie}`,\r\n                                des: `${row.descriere}`,\r\n                                sev: `${row.severitate}`,\r\n                                pri: `${row.prioritate}`,\r\n                              },\r\n                            }}\r\n                          >\r\n                            <EditIcon />\r\n                          </Link>\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <DeleteIcon\r\n                            onClick={() => this.DeleteBug(row.id_bug)}\r\n                          />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Project);\r\n","D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\components\\nav.js",[],"D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\components\\addProject.js",["91","92"],"import React, { Component } from \"react\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  FormHelperText,\r\n  TextField,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  Container,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\"\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { RETURN_USER } from \"../redux/actionCreators\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { TransferWithinAStationSharp } from \"@material-ui/icons\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n    console.log();\r\n    this.state = {\r\n      name: \"\",\r\n      description: \"\",\r\n      id_categorie: \"\",\r\n      link_git: \"\",\r\n      user_select: [],\r\n      categorii: [],\r\n      utilizatori: []\r\n    };\r\n    this.handleChangeName = this.handleChangeName.bind(this);\r\n    this.handleChangeCategory = this.handleChangeCategory.bind(this);\r\n    this.handleChangeDescription = this.handleChangeDescription.bind(this);\r\n    this.handleChangeGithubLink = this.handleChangeGithubLink.bind(this);\r\n    this.handleChangeUsers = this.handleChangeUsers.bind(this);\r\n    this.handleClick = this.handleUpdate.bind(this);\r\n  }\r\n\r\n  handleUpdate = async (e) => {\r\n    e.preventDefault();\r\n\r\n    var ids = this.state.user_select.map(u=>u.id_user);\r\n\r\n    console.log(ids);\r\n    const props = this.props;\r\n    try {\r\n      // POST request using fetch with async/await\r\n      let _body = JSON.stringify({\r\n        denumire: this.state.name,\r\n        descriere: this.state.description,\r\n        link_git: this.state.link_git,\r\n        users_ids: ids,\r\n        id_categorie: this.state.id_categorie,\r\n      });\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: _body,\r\n      };\r\n      const response = await fetch(\r\n        \"http://localhost:8001/api/projects\",\r\n        requestOptions\r\n      );\r\n\r\n      const data = await response.json();\r\n\r\n      let x = [];\r\n\r\n      x = JSON.parse(localStorage.getItem(\"projects\"));\r\n\r\n      await x.push(data);\r\n      localStorage.setItem(\"projects\", JSON.stringify(x));\r\n\r\n      props.history.push(\"/\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  RETURN_USER(e) {\r\n    this.props.actions.RETURN_USER(e);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"log in mounted\");\r\n    this.getCategorii();\r\n    this.getUtilizatori();\r\n  }\r\n\r\n  getCategorii() {\r\n    fetch(\"http://localhost:8001/api/categories\")\r\n      .then((response) => response.json())\r\n      .then((listaCategorii) =>\r\n        this.setState({\r\n          categorii: listaCategorii,\r\n        })\r\n      );\r\n  }\r\n\r\n  getUtilizatori() {\r\n    fetch(\"http://localhost:8001/api/users\")\r\n      .then((response) => response.json())\r\n      .then((listaUtilizatori) =>\r\n        this.setState({\r\n          utilizatori: listaUtilizatori,\r\n        })\r\n      );\r\n  }\r\n\r\n  handleChangeName(event) {\r\n    this.setState({\r\n      name: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleChangeCategory(event) {\r\n    this.setState({\r\n      id_categorie: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleChangeDescription(event) {\r\n    this.setState({\r\n      description: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleChangeGithubLink(event) {\r\n    this.setState({\r\n      link_git: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleChangeUsers(e, v) {\r\n    console.log(v)\r\n    this.setState({\r\n      user_select: v,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const props = this.props;\r\n\r\n    console.log(\"test\");\r\n    console.log(this.state.id_categorie);\r\n    return (\r\n      <div\r\n        style={{\r\n          backgroundColor: \"#FFF6EB\",\r\n          height: \"120vh\",\r\n          minWidth: \"100vw\",\r\n        }}\r\n      >\r\n        <div style={{ height: \"100px\" }}></div>\r\n        <Container\r\n          id=\"logInContainer\"\r\n          style={{\r\n            backgroundColor: \"#FFE4C4\",\r\n            width: \"400px\",\r\n            height: \"50%\",\r\n            borderRadius: \"25px\",\r\n          }}\r\n        >\r\n\r\n          <FormControl fullWidth>\r\n            <InputLabel htmlFor=\"name-input\">Project name</InputLabel>\r\n            <Input onChange={this.handleChangeName} id=\"name-input\" />\r\n          </FormControl>\r\n\r\n          <FormControl fullWidth>\r\n            <InputLabel htmlFor=\"catid-input\">Category</InputLabel>\r\n            <Select\r\n              dataSource\r\n              variant=\"standard\"\r\n              onChange={this.handleChangeCategory}\r\n              id=\"catid-input\"\r\n            >\r\n              {this.state.categorii.map((c) => (\r\n                <MenuItem value={c.id_categorie}>{c.denumire_categ}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl fullWidth>\r\n            <InputLabel htmlFor=\"desc-input\">Description</InputLabel>\r\n            <Input onChange={this.handleChangeDescription} id=\"desc-input\" />\r\n          </FormControl>\r\n\r\n          <FormControl fullWidth>\r\n            <InputLabel htmlFor=\"pwd-input\">GitHub Link</InputLabel>\r\n            <Input onChange={this.handleChangeGithubLink} id=\"pwd-input\" />\r\n          </FormControl>\r\n\r\n          <FormControl fullWidth>\r\n            <Autocomplete\r\n              multiple\r\n              defaultValue={[]}\r\n              id=\"tags-standard\"\r\n              options={this.state.utilizatori}\r\n              getOptionLabel={(utilizator) => utilizator.username}\r\n              onChange={this.handleChangeUsers}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  variant=\"standard\"\r\n                  label=\"Members\"\r\n                  placeholder=\"Favorites\"\r\n                />\r\n              )}\r\n            />\r\n            <FormHelperText id=\"my-helper-text\">\r\n              Exemple: 99,13,22\r\n            </FormHelperText>\r\n          </FormControl>\r\n\r\n          <Button\r\n            style={{ backgroundColor: \"#931621\" }}\r\n            onClick={this.handleUpdate}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            ADD\r\n          </Button>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state,\r\n  };\r\n}\r\n\r\nfunction mapDispachToProps(dispach) {\r\n  return {\r\n    actions: bindActionCreators({ RETURN_USER }, dispach),\r\n  };\r\n}\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispachToProps)(AddProject)\r\n);\r\n","D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\components\\home.js",["93","94","95","96","97"],"D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\components\\login.js",["98"],"import React, { Component } from \"react\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  FormHelperText,\r\n  Input,\r\n  Button,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport dev from \"../icons/dev.png\";\r\nimport { RETURN_USER } from \"../redux/actionCreators\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport Profile from \"./profile\";\r\nimport Home from \"./home\";\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      mail: \"\",\r\n      password: \"\",\r\n      isLoggedIn: false,\r\n      userData: null,\r\n    };\r\n\r\n    this.RETURN_USER = this.RETURN_USER.bind(this);\r\n    this.handleClick = this.handleLogIn.bind(this);\r\n    this.handleChangeMail = this.handleChangeMail.bind(this);\r\n    this.handleChangePass = this.handleChangePass.bind(this);\r\n\r\n    this.EmailInput = React.createRef();\r\n  }\r\n\r\n  RETURN_USER(e) {\r\n    this.props.actions.RETURN_USER(e);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"log in mounted\");\r\n  }\r\n\r\n  handleChangePass(event) {\r\n    this.setState({\r\n      password: event.target.value,\r\n    });\r\n    console.log(event.target.value);\r\n  }\r\n\r\n  handleChangeMail(event) {\r\n    this.setState({\r\n      mail: event.target.value,\r\n    });\r\n    console.log(event.target.value);\r\n  }\r\n\r\n  handleLogIn = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // POST request using fetch with async/await\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        mail: this.state.mail,\r\n        parola: this.state.password,\r\n      }),\r\n    };\r\n    const response = await fetch(\r\n      \"http://localhost:8001/api/login\",\r\n      requestOptions\r\n    );\r\n    const data = await response.json();\r\n    console.log(data);\r\n\r\n    if (data.id_user) {\r\n      console.log(data.username);\r\n      this.setState({\r\n        isLoggedIn: true,\r\n        userData: data,\r\n      });\r\n      this.RETURN_USER(data.id_user);\r\n      localStorage.setItem(\"username\", data.username);\r\n      localStorage.setItem(\"id\", data.id_user);\r\n      localStorage.setItem(\"email\", data.mail);\r\n      console.log(\"aici\");\r\n      console.log(this.props);\r\n    } else {\r\n      this.setState({\r\n        isLoggedIn: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.state.isLoggedIn === false) {\r\n      return (\r\n        <div\r\n          style={{\r\n            height: \"150vh\",\r\n            minWidth: \"100vw\",\r\n          }}\r\n        >\r\n          <div style={{ height: \"100px\" }}></div>\r\n\r\n          <div>\r\n            <Container\r\n              id=\"logInContainer\"\r\n              style={{\r\n                float: \"left\",\r\n                marginTop: \"5%\",\r\n                marginLeft: \"30%\",\r\n                backgroundColor: \"white\",\r\n                width: 300,\r\n                height: \"300px\",\r\n                borderRadius: \"25px\",\r\n                outline: \"#000000 solid 4px\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  height: \"20px\",\r\n                  backgroundColor: \"black\",\r\n                  borderBottomLeftRadius: \"22px\",\r\n                  borderBottomRightRadius: \"22px\",\r\n                }}\r\n              ></div>\r\n              <div style={{ height: \"20px\" }}></div>\r\n\r\n              <FormControl>\r\n                <InputLabel htmlFor=\"email-input\">Email address</InputLabel>\r\n                <Input\r\n                  ref={this.EmailInput}\r\n                  onChange={this.handleChangeMail}\r\n                  id=\"email-input\"\r\n                />\r\n              </FormControl>\r\n\r\n              <div style={{ height: \"15px\" }}></div>\r\n              <FormControl>\r\n                <InputLabel htmlFor=\"my-input\">Password</InputLabel>\r\n                <Input\r\n                  onChange={this.handleChangePass}\r\n                  id=\"password-input\"\r\n                  aria-describedby=\"my-helper-text\"\r\n                />\r\n                <FormHelperText id=\"my-helper-text\">\r\n                  We'll never share your Password\r\n                </FormHelperText>\r\n              </FormControl>\r\n\r\n              <div style={{ height: \"50px\" }}></div>\r\n\r\n              <Button\r\n                style={{\r\n                  borderRadius: \"20px\",\r\n                  color: \"black\",\r\n                  backgroundColor: \"white\",\r\n                  fontWeight: \"bold\",\r\n                  fontFamily: \"VAG Rounded\",\r\n                  outline: \"black solid 2px\",\r\n                }}\r\n                onClick={this.handleLogIn}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Log In\r\n              </Button>\r\n            </Container>\r\n\r\n            <img\r\n              alt=\"developer-animation\"\r\n              id=\"animLogIn\"\r\n              style={{\r\n                float: \"bottom\",\r\n                marginLeft: \"100px\",\r\n                marginRight: \"10%\",\r\n                marginTop: \"62px\",\r\n              }}\r\n              src={dev}\r\n            ></img>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Home></Home>;\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state,\r\n  };\r\n}\r\n\r\nfunction mapDispachToProps(dispach) {\r\n  return {\r\n    actions: bindActionCreators({ RETURN_USER }, dispach),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispachToProps)(Login);\r\n","D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\components\\formBug2.js",["99","100"],"import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport FilledInput from \"@material-ui/core/FilledInput\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nclass formBug2 extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: [],\r\n      loading: false,\r\n      loaded: false,\r\n    };\r\n    this.postBug = this.postBug.bind(this);\r\n    this.handleDescriereChange = this.handleDescriereChange.bind(this);\r\n    this.handleSeveritateChange = this.handleSeveritateChange.bind(this);\r\n    this.handlePrioritateChange = this.handlePrioritateChange.bind(this);\r\n    this.handleIdCategorieChange = this.handleIdCategorieChange.bind(this);\r\n    this.handleIdUserChange = this.handleIdUserChange.bind(this);\r\n    this.handleIdProiectChange = this.handleIdProiectChange.bind(this);\r\n  }\r\n\r\n  async postBug() {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        id_proiect: this.state.id_proiect,\r\n        id_user: this.state.id_user,\r\n        id_categorie: this.state.id_categorie,\r\n        severitate: this.state.severitate,\r\n        descriere: this.state.descriere,\r\n        prioritate: this.state.prioritate,\r\n      }),\r\n    };\r\n    console.log(\"aici\");\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:8001/api/bugs`,\r\n        requestOptions\r\n      );\r\n      const data = await response.json();\r\n      console.log(this.state);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log(`updated... is data loading? ${this.state.loading}`);\r\n    console.log(`updated... is data loaded? ${this.state.loaded}`);\r\n\r\n    // if (prevState.loaded !== this.state.loaded && this.state.loaded) {\r\n    //     localStorage.setItem(\"Images\", JSON.stringify(this.state.data.images))\r\n    // }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    //localStorage.setItem(\"Projects\", JSON.stringify(this.state.data))\r\n    console.log(\"unmounted\");\r\n  }\r\n\r\n  handleIdProiectChange = (event) => {\r\n    this.setState({\r\n      id_proiect: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleIdUserChange = (event) => {\r\n    this.setState({\r\n      id_user: event.target.value,\r\n    });\r\n  };\r\n  handleIdCategorieChange = (event) => {\r\n    this.setState({\r\n      id_categorie: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleDescriereChange = (event) => {\r\n    this.setState({\r\n      descriere: event.target.value,\r\n    });\r\n  };\r\n\r\n  handlePrioritateChange = (event) => {\r\n    this.setState({\r\n      prioritate: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSeveritateChange = (event) => {\r\n    this.setState({\r\n      severitate: event.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const props = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <form noValidate autoComplete=\"off\">\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel htmlFor=\"component-filled\">Id Proiect:</InputLabel>\r\n            <FilledInput\r\n              id=\"component-filled\"\r\n              onChange={this.handleIdProiectChange}\r\n            />\r\n          </FormControl>\r\n          <br />\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel htmlFor=\"component-filled\">Id User:</InputLabel>\r\n            <FilledInput\r\n              id=\"component-filled\"\r\n              onChange={this.handleIdUserChange}\r\n            />\r\n          </FormControl>\r\n          <br />\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel htmlFor=\"component-filled\">Id Categorie:</InputLabel>\r\n            <FilledInput\r\n              id=\"component-filled\"\r\n              onChange={this.handleIdCategorieChange}\r\n            />\r\n          </FormControl>\r\n          <br />\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel htmlFor=\"component-filled\">\r\n              Descrierea Bug-ului:\r\n            </InputLabel>\r\n            <FilledInput\r\n              id=\"component-filled\"\r\n              onChange={this.handleDescriereChange}\r\n            />\r\n          </FormControl>\r\n\r\n          <br />\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel htmlFor=\"component-filled\">Prioritate:</InputLabel>\r\n            <FilledInput\r\n              id=\"component-filled\"\r\n              onChange={this.handlePrioritateChange}\r\n            />\r\n          </FormControl>\r\n\r\n          <br />\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel htmlFor=\"component-filled\">Severitate:</InputLabel>\r\n            <FilledInput\r\n              id=\"component-filled\"\r\n              onChange={this.handleSeveritateChange}\r\n            />\r\n          </FormControl>\r\n          <br />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={() => this.postBug()}\r\n            startIcon={<SaveIcon />}\r\n          >\r\n            Save\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(formBug2);\r\n","D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\components\\formBug.js",["101","102"],"import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport FilledInput from \"@material-ui/core/FilledInput\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nclass formBug extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: [],\r\n      loading: false,\r\n      loaded: false,\r\n    };\r\n    this.updateBug = this.updateBug.bind(this);\r\n    this.handleDescriereChange = this.handleDescriereChange.bind(this);\r\n    this.handleSeveritateChange = this.handleSeveritateChange.bind(this);\r\n    this.handlePrioritateChange = this.handlePrioritateChange.bind(this);\r\n  }\r\n\r\n  async updateBug(id_bug) {\r\n    const requestOptions = {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        severitate: this.state.severitate,\r\n        descriere: this.state.descriere,\r\n        prioritate: this.state.prioritate,\r\n      }),\r\n    };\r\n    console.log(\"aici\");\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:8001/api/bugs/${id_bug}`,\r\n        requestOptions\r\n      );\r\n      const data = await response.json();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log(`updated... is data loading? ${this.state.loading}`);\r\n    console.log(`updated... is data loaded? ${this.state.loaded}`);\r\n\r\n    // if (prevState.loaded !== this.state.loaded && this.state.loaded) {\r\n    //     localStorage.setItem(\"Images\", JSON.stringify(this.state.data.images))\r\n    // }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    //localStorage.setItem(\"Projects\", JSON.stringify(this.state.data))\r\n    console.log(\"unmounted\");\r\n  }\r\n\r\n  handleDescriereChange = (event) => {\r\n    this.setState({\r\n      descriere: event.target.value,\r\n    });\r\n  };\r\n\r\n  handlePrioritateChange = (event) => {\r\n    this.setState({\r\n      prioritate: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSeveritateChange = (event) => {\r\n    this.setState({\r\n      severitate: event.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const props = this.props;\r\n\r\n    return (\r\n      //<div></div>\r\n\r\n      <div>\r\n        <form noValidate autoComplete=\"off\">\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel htmlFor=\"component-filled\">ID Bug:</InputLabel>\r\n            <FilledInput\r\n              id=\"component-filled\"\r\n              readOnly={true}\r\n              defaultValue={this.props.location.state.id_b}\r\n            />\r\n          </FormControl>\r\n          <br />\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel htmlFor=\"component-filled\">Id User:</InputLabel>\r\n            <FilledInput\r\n              id=\"component-filled\"\r\n              readOnly={true}\r\n              defaultValue={this.props.location.state.id_u}\r\n            />\r\n          </FormControl>\r\n          <br />\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel htmlFor=\"component-filled\">Id Categorie:</InputLabel>\r\n            <FilledInput\r\n              id=\"component-filled\"\r\n              readOnly={true}\r\n              defaultValue={this.props.location.state.id_c}\r\n            />\r\n          </FormControl>\r\n          <br />\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel htmlFor=\"component-filled\">\r\n              Descrierea Bug-ului:\r\n            </InputLabel>\r\n            <FilledInput\r\n              id=\"component-filled\"\r\n              defaultValue={this.props.location.state.des}\r\n              onChange={this.handleDescriereChange}\r\n            />\r\n          </FormControl>\r\n\r\n          <br />\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel htmlFor=\"component-filled\">Prioritate:</InputLabel>\r\n            <FilledInput\r\n              id=\"component-filled\"\r\n              defaultValue={this.props.location.state.pri}\r\n              onChange={this.handlePrioritateChange}\r\n            />\r\n          </FormControl>\r\n\r\n          <br />\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel htmlFor=\"component-filled\">Severitate:</InputLabel>\r\n            <FilledInput\r\n              id=\"component-filled\"\r\n              defaultValue={this.props.location.state.sev}\r\n              onChange={this.handleSeveritateChange}\r\n            />\r\n          </FormControl>\r\n          <br />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={() => this.updateBug(this.props.location.state.id_b)}\r\n            startIcon={<SaveIcon />}\r\n          >\r\n            Save\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(formBug);\r\n","D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\components\\bug.js",["103","104","105","106","107"],"import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Button, Typography, ButtonGroup, Box } from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nclass Bug extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: [],\r\n      loading: false,\r\n      loaded: false,\r\n    };\r\n  }\r\n  async fetchProjects() {\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      loading: true,\r\n    }));\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:8001/api/BugWithComments/${this.props.location.state.id_b}`\r\n      );\r\n      const data = await response.json();\r\n      const comments = new Array();\r\n      const currentBug = data[0];\r\n      for (let i = 0; i < data[0].Comments.length; i++) {\r\n        comments[i] = data[0].Comments[i];\r\n      }\r\n\r\n      this.setState((prevState) => ({\r\n        ...prevState,\r\n        loading: false,\r\n        loaded: true,\r\n        data: data,\r\n        comments: comments,\r\n        currentBug: currentBug,\r\n      }));\r\n\r\n      console.log(\"aici\");\r\n      console.log(data[0]);\r\n      console.log(comments);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    /*const savadImages = JSON.parse(localStorage.getItem(\"Images\"))\r\n        if (Object.keys(savadImages).length !== 0) {\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                loading: false,\r\n                loaded:true,\r\n                data: savadImages\r\n            }))\r\n        }\r\n        else {\r\n            this.fetchImages();\r\n            console.log(\"mounted\")\r\n        }*/\r\n    this.fetchProjects();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log(`updated... is data loading? ${this.state.loading}`);\r\n    console.log(`updated... is data loaded? ${this.state.loaded}`);\r\n\r\n    // if (prevState.loaded !== this.state.loaded && this.state.loaded) {\r\n    //     localStorage.setItem(\"Images\", JSON.stringify(this.state.data.images))\r\n    // }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    //localStorage.setItem(\"Projects\", JSON.stringify(this.state.data))\r\n    console.log(\"unmounted\");\r\n  }\r\n\r\n  render() {\r\n    const props = this.props;\r\n\r\n    return (\r\n      <div style={{ backgroundColor: \"#FFF6EB\", height: \"100%\" }}>\r\n        {this.state.loaded && (\r\n          <div\r\n            className=\"container\"\r\n            style={{\r\n              height: \"150px\",\r\n              width: \"300px\",\r\n              border: \"5px outset black\",\r\n              backgroundImage: \"linear-gradient(180deg, #fff, #ddd 40%, #ccc\",\r\n            }}\r\n          >\r\n            <Typography>Informatii despre Bug:</Typography>\r\n            <Typography style={{ color: \"#800000\" }}>\r\n              Id Bug:{this.state.currentBug.id_bug}\r\n            </Typography>\r\n            <Typography style={{ color: \"#800000\" }}>\r\n              Descriere:{this.state.currentBug.descriere}\r\n            </Typography>\r\n            <Typography style={{ color: \"#800000\" }}>\r\n              Prioritate:{this.state.currentBug.prioritate}\r\n            </Typography>\r\n            <Typography style={{ color: \"#800000\" }}>\r\n              Severitate:{this.state.currentBug.severitate}\r\n            </Typography>\r\n            <Typography style={{ color: \"#800000\" }}>\r\n              Id Categorie:{this.state.currentBug.id_categorie}\r\n            </Typography>\r\n            <Typography style={{ color: \"#800000\" }}>\r\n              Id User:{this.state.currentBug.id_user}\r\n            </Typography>\r\n            <Typography style={{ color: \"#800000\" }}>\r\n              Nr.de Comentarii:{this.state.comments.length}\r\n            </Typography>\r\n          </div>\r\n        )}\r\n        <div className=\"container\">\r\n          <div className=\"center\">\r\n            {this.state.loaded &&\r\n              this.state.comments.map((comm) => (\r\n                <Card variant=\"outlined\">\r\n                  <CardContent style={{ backgroundColor: \"#FFE4C4\" }}>\r\n                    <Typography\r\n                      style={{ color: \"#800000\" }}\r\n                      color=\"textPrimary\"\r\n                      gutterBottom\r\n                    >\r\n                      Comentariu:{comm.id_comment}\r\n                    </Typography>\r\n                    <Typography variant=\"h\" component=\"h2\">\r\n                      {comm.body}\r\n                    </Typography>\r\n                    <Typography align=\"right\" color=\"textPrimary\">\r\n                      Stare:{comm.stare}\r\n                    </Typography>\r\n                    <Typography align=\"left\" color=\"textPrimary\">\r\n                      Nr.Likes:{comm.nrlikes}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Bug);\r\n","D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\components\\register.js",[],"D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\components\\editProject.js",["108","109","110"],"import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport FilledInput from \"@material-ui/core/FilledInput\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport DeleteIcon from \"@material-ui/icons/DeleteForever\";\r\n\r\nclass EditProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: [],\r\n      loading: false,\r\n      loaded: false\r\n    };\r\n    this.deleteProject = this.deleteProject.bind(this);\r\n    this.updateProject = this.updateProject.bind(this);\r\n    this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n    this.handleGitLinkChange = this.handleGitLinkChange.bind(this);\r\n  }\r\n\r\n  async deleteProject(id_p) {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:8001/api/projects/${id_p}`,\r\n        {\r\n          method: \"DELETE\",\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      console.log(\"test\");\r\n\r\n      const props = this.props;\r\n\r\n      let x = [];\r\n\r\n      x = JSON.parse(localStorage.getItem(\"projects\"));\r\n\r\n      //console.log(x)\r\n\r\n      for (let i = 0; i < x.length; i++) {\r\n        if (x[i].id_proiect == this.props.location.state.id_p) {\r\n          x.splice(i, 1);\r\n        }\r\n      }\r\n      localStorage.setItem(\"projects\", JSON.stringify(x));\r\n      props.history.push(\"/\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  async updateProject(id_p) {\r\n    const requestOptions = {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        descriere: this.state.description,\r\n        denumire: this.state.name,\r\n        link_git: this.state.git_link,\r\n      }),\r\n    };\r\n    console.log(\"aici\");\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:8001/api/projects/${id_p}`,\r\n        requestOptions\r\n      );\r\n      const data = await response.json();\r\n      console.log(data);\r\n      const props = this.props;\r\n\r\n      let x = [];\r\n\r\n      x = JSON.parse(localStorage.getItem(\"projects\"));\r\n      for (let i = 0; i < x.length; i++) {\r\n        if (x[i].id_proiect == this.props.location.state.id_p) {\r\n          x[i].denumire = this.state.name;\r\n          x[i].descriere = this.state.description;\r\n          x[i].link_git = this.state.git_link;\r\n        }\r\n      }\r\n      localStorage.setItem(\"projects\", JSON.stringify(x));\r\n      props.history.push(\"/\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log(`updated... is data loading? ${this.state.loading}`);\r\n    console.log(`updated... is data loaded? ${this.state.loaded}`);\r\n\r\n    // if (prevState.loaded !== this.state.loaded && this.state.loaded) {\r\n    //     localStorage.setItem(\"Images\", JSON.stringify(this.state.data.images))\r\n    // }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    //localStorage.setItem(\"Projects\", JSON.stringify(this.state.data))\r\n    console.log(\"unmounted\");\r\n  }\r\n\r\n  handleDescriptionChange = (event) => {\r\n    this.setState({\r\n      description: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleNameChange = (event) => {\r\n    this.setState({\r\n      name: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleGitLinkChange = (event) => {\r\n    this.setState({\r\n      git_link: event.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const props = this.props;\r\n    console.log(this.props.location.state.id_p);\r\n    console.log(\"editProject props\");\r\n    console.log(props);\r\n\r\n    return (\r\n      <div style={{ backgroundColor: \"#FFE4C4\", height: \"100vh\" }}>\r\n        <form noValidate autoComplete=\"off\">\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel htmlFor=\"component-filled\">Project Id:</InputLabel>\r\n            <FilledInput\r\n              id=\"component-filled\"\r\n              readOnly={true}\r\n              defaultValue={this.props.location.state.id_p}\r\n            />\r\n          </FormControl>\r\n          <br />\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel htmlFor=\"component-filled\">Category Id:</InputLabel>\r\n            <FilledInput\r\n              id=\"component-filled\"\r\n              readOnly={true}\r\n              defaultValue={this.props.location.state.id_categorie}\r\n            />\r\n          </FormControl>\r\n          <br />\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel htmlFor=\"component-filled\">Name:</InputLabel>\r\n            <FilledInput\r\n              id=\"component-filled\"\r\n              defaultValue={this.props.location.state.denumire}\r\n              onChange={this.handleNameChange}\r\n            />\r\n          </FormControl>\r\n\r\n          <br />\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel htmlFor=\"component-filled\">Description:</InputLabel>\r\n            <FilledInput\r\n              id=\"component-filled\"\r\n              defaultValue={this.props.location.state.desc}\r\n              onChange={this.handleDescriptionChange}\r\n            />\r\n          </FormControl>\r\n\r\n          <br />\r\n          <FormControl variant=\"filled\">\r\n            <InputLabel htmlFor=\"component-filled\">Github Link </InputLabel>\r\n            <FilledInput\r\n              id=\"component-filled\"\r\n              defaultValue={this.props.location.state.link_git}\r\n              onChange={this.handleGitLinkChange}\r\n            />\r\n          </FormControl>\r\n\r\n          <br />\r\n\r\n          <div style={{ height: \"20px\" }}></div>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={() => this.updateProject(this.props.location.state.id_p)}\r\n            startIcon={<SaveIcon />}\r\n            style={{ color: \"white\", backgroundColor: \"#931621\" }}\r\n          >\r\n            Save\r\n          </Button>\r\n          <div style={{ width: \"20px\", height: \"20px\" }}></div>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={() => this.deleteProject(this.props.location.state.id_p)}\r\n            startIcon={<DeleteIcon />}\r\n            style={{ color: \"white\", backgroundColor: \"#931621\" }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(EditProject);\r\n","D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\components\\footer.js",[],"D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\components\\profile.js",["111","112"],"D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\redux\\actionTypes.js",[],"D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\redux\\initialState.js",[],"D:\\GitProiect\\TEHPR_FINAL\\gui\\src\\redux\\actionCreators.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":40,"column":20,"nodeType":"119","messageId":"120","endLine":40,"endColumn":31},{"ruleId":"121","severity":1,"message":"122","line":64,"column":13,"nodeType":"123","messageId":"124","endLine":64,"endColumn":17},{"ruleId":"121","severity":1,"message":"125","line":110,"column":11,"nodeType":"123","messageId":"124","endLine":110,"endColumn":16},{"ruleId":"121","severity":1,"message":"126","line":18,"column":10,"nodeType":"123","messageId":"124","endLine":18,"endColumn":37},{"ruleId":"121","severity":1,"message":"125","line":144,"column":11,"nodeType":"123","messageId":"124","endLine":144,"endColumn":16},{"ruleId":"121","severity":1,"message":"127","line":15,"column":8,"nodeType":"123","messageId":"124","endLine":15,"endColumn":12},{"ruleId":"117","severity":1,"message":"118","line":41,"column":24,"nodeType":"119","messageId":"120","endLine":41,"endColumn":35},{"ruleId":"121","severity":1,"message":"122","line":66,"column":13,"nodeType":"123","messageId":"124","endLine":66,"endColumn":17},{"ruleId":"121","severity":1,"message":"125","line":69,"column":13,"nodeType":"123","messageId":"124","endLine":69,"endColumn":18},{"ruleId":"128","severity":1,"message":"129","line":73,"column":29,"nodeType":"130","messageId":"131","endLine":73,"endColumn":31},{"ruleId":"121","severity":1,"message":"132","line":14,"column":8,"nodeType":"123","messageId":"124","endLine":14,"endColumn":15},{"ruleId":"121","severity":1,"message":"122","line":45,"column":13,"nodeType":"123","messageId":"124","endLine":45,"endColumn":17},{"ruleId":"121","severity":1,"message":"125","line":104,"column":11,"nodeType":"123","messageId":"124","endLine":104,"endColumn":16},{"ruleId":"121","severity":1,"message":"122","line":39,"column":13,"nodeType":"123","messageId":"124","endLine":39,"endColumn":17},{"ruleId":"121","severity":1,"message":"125","line":80,"column":11,"nodeType":"123","messageId":"124","endLine":80,"endColumn":16},{"ruleId":"121","severity":1,"message":"133","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":16},{"ruleId":"121","severity":1,"message":"134","line":3,"column":30,"nodeType":"123","messageId":"124","endLine":3,"endColumn":41},{"ruleId":"121","severity":1,"message":"135","line":3,"column":43,"nodeType":"123","messageId":"124","endLine":3,"endColumn":46},{"ruleId":"117","severity":1,"message":"118","line":26,"column":24,"nodeType":"119","messageId":"120","endLine":26,"endColumn":35},{"ruleId":"121","severity":1,"message":"125","line":81,"column":11,"nodeType":"123","messageId":"124","endLine":81,"endColumn":16},{"ruleId":"121","severity":1,"message":"122","line":33,"column":13,"nodeType":"123","messageId":"124","endLine":33,"endColumn":17},{"ruleId":"128","severity":1,"message":"129","line":45,"column":29,"nodeType":"130","messageId":"131","endLine":45,"endColumn":31},{"ruleId":"128","severity":1,"message":"129","line":80,"column":29,"nodeType":"130","messageId":"131","endLine":80,"endColumn":31},{"ruleId":"121","severity":1,"message":"125","line":30,"column":11,"nodeType":"123","messageId":"124","endLine":30,"endColumn":16},{"ruleId":"136","severity":1,"message":"137","line":60,"column":15,"nodeType":"138","endLine":60,"endColumn":51},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'props' is assigned a value but never used.","'TransferWithinAStationSharp' is defined but never used.","'plus' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Profile' is defined but never used.","'Button' is defined but never used.","'ButtonGroup' is defined but never used.","'Box' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]